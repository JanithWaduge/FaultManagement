{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Janith\\\\Desktop\\\\My Projects\\\\Fault Management System\\\\Frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  userInfo,\n  notifications,\n  setNotifications,\n  onLogout\n}) {\n  _s();\n  const [modal, setModal] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const [search, setSearch] = useState(\"\");\n  const [view, setView] = useState(\"\"); // 'faults' or 'resolved'\n  const [showNotif, setShowNotif] = useState(false);\n  const [notesModal, setNotesModal] = useState(false);\n  const [selectedFaultForNotes, setSelectedFaultForNotes] = useState(null);\n  const notifRef = useRef();\n  const [footerInfo, setFooterInfo] = useState(false);\n  const {\n    open,\n    resolved,\n    create,\n    update,\n    remove,\n    resolve,\n    err,\n    setErr\n  } = useMultiFaults();\n\n  // Initialize notes hook\n  const token = localStorage.getItem(\"token\");\n  const {\n    notes,\n    loading,\n    error: notesError,\n    fetchNotes,\n    addNote,\n    editNote,\n    deleteNote,\n    clearNotesCache\n  } = useFaultNotes(token);\n  useEffect(() => {\n    if (showNotif) setNotifications(n => n.map(e => ({\n      ...e,\n      isRead: true\n    })));\n    function outside(e) {\n      if (notifRef.current && !notifRef.current.contains(e.target)) setShowNotif(false);\n    }\n    document.addEventListener(\"mousedown\", outside);\n    return () => document.removeEventListener(\"mousedown\", outside);\n  }, [showNotif, setNotifications]);\n  const currentFaultArr = view === \"faults\" ? open : resolved;\n\n  // Sort faults by descending id (Newest first)\n  const sortedFaults = useMemo(() => [...currentFaultArr].sort((a, b) => b.id - a.id), [currentFaultArr]);\n\n  // Filter by search term\n  const filtered = useMemo(() => {\n    return sortedFaults.filter(f => {\n      if (!f) return false;\n      const haystack = [f.DescFault, f.Location, f.LocationOfFault, f.ReportedBy, f.SystemID].join(\" \").toLowerCase();\n      return haystack.includes(search.toLowerCase());\n    });\n  }, [sortedFaults, search]);\n\n  // Pagination state\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    setPage(1); // Reset to first page when filtered data changes\n  }, [filtered]);\n  const max = Math.ceil(filtered.length / 10);\n  const current = filtered.slice((page - 1) * 10, page * 10);\n\n  // Open modal in edit mode\n  function openEditModal(fault) {\n    setEdit(fault);\n    setModal(true);\n  }\n\n  // Open notes modal\n  function openNotesModal(fault) {\n    setSelectedFaultForNotes(fault);\n    setNotesModal(true);\n  }\n\n  // Debugging: Log the filtered and current faults to verify data\n  useEffect(() => {\n    console.log(\"Filtered faults:\", filtered);\n    console.log(\"Current faults:\", current);\n  }, [filtered, current]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Tab, {\n      eventKey: \"faults\",\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tab-title-lg\",\n        children: \"\\uD83D\\uDEA7 Faults Review Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this),\n      children: view === \"faults\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3 px-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Search faults...\",\n              value: search,\n              onChange: e => setSearch(e.target.value),\n              \"aria-label\": \"Search faults\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 px-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Faults:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), \" \", filtered.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaultsTable, {\n          faults: current,\n          onEdit: update,\n          onMarkResolved: resolve,\n          isResolved: false,\n          page: page,\n          setPage: setPage,\n          max: max,\n          onOpenEditModal: openEditModal,\n          onOpenNotesModal: openNotesModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), filtered.length > current.length && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            onClick: () => setPage(1) // Reset to first page to show all\n            ,\n            children: \"Show All Faults\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Dashboard, \"+w2VRIaDrG+3ZcKEH67l0XbZgG8=\", true);\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Dashboard","userInfo","notifications","setNotifications","onLogout","_s","modal","setModal","useState","edit","setEdit","search","setSearch","view","setView","showNotif","setShowNotif","notesModal","setNotesModal","selectedFaultForNotes","setSelectedFaultForNotes","notifRef","useRef","footerInfo","setFooterInfo","open","resolved","create","update","remove","resolve","err","setErr","useMultiFaults","token","localStorage","getItem","notes","loading","error","notesError","fetchNotes","addNote","editNote","deleteNote","clearNotesCache","useFaultNotes","useEffect","n","map","e","isRead","outside","current","contains","target","document","addEventListener","removeEventListener","currentFaultArr","sortedFaults","useMemo","sort","a","b","id","filtered","filter","f","haystack","DescFault","Location","LocationOfFault","ReportedBy","SystemID","join","toLowerCase","includes","page","setPage","max","Math","ceil","length","slice","openEditModal","fault","openNotesModal","console","log","_jsxDEV","_Fragment","children","Tab","eventKey","title","className","fileName","_jsxFileName","lineNumber","columnNumber","Row","Col","md","type","placeholder","value","onChange","FaultsTable","faults","onEdit","onMarkResolved","isResolved","onOpenEditModal","onOpenNotesModal","Button","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Janith/Desktop/My Projects/Fault Management System/Frontend/src/Dashboard.js"],"sourcesContent":["export default function Dashboard({\r\n  userInfo,\r\n  notifications,\r\n  setNotifications,\r\n  onLogout,\r\n}) {\r\n  const [modal, setModal] = useState(false);\r\n  const [edit, setEdit] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [view, setView] = useState(\"\"); // 'faults' or 'resolved'\r\n  const [showNotif, setShowNotif] = useState(false);\r\n  const [notesModal, setNotesModal] = useState(false);\r\n  const [selectedFaultForNotes, setSelectedFaultForNotes] = useState(null);\r\n  const notifRef = useRef();\r\n  const [footerInfo, setFooterInfo] = useState(false);\r\n\r\n  const { open, resolved, create, update, remove, resolve, err, setErr } =\r\n    useMultiFaults();\r\n\r\n  // Initialize notes hook\r\n  const token = localStorage.getItem(\"token\");\r\n  const {\r\n    notes,\r\n    loading,\r\n    error: notesError,\r\n    fetchNotes,\r\n    addNote,\r\n    editNote,\r\n    deleteNote,\r\n    clearNotesCache,\r\n  } = useFaultNotes(token);\r\n\r\n  useEffect(() => {\r\n    if (showNotif)\r\n      setNotifications((n) => n.map((e) => ({ ...e, isRead: true })));\r\n    function outside(e) {\r\n      if (notifRef.current && !notifRef.current.contains(e.target))\r\n        setShowNotif(false);\r\n    }\r\n    document.addEventListener(\"mousedown\", outside);\r\n    return () => document.removeEventListener(\"mousedown\", outside);\r\n  }, [showNotif, setNotifications]);\r\n\r\n  const currentFaultArr = view === \"faults\" ? open : resolved;\r\n\r\n  // Sort faults by descending id (Newest first)\r\n  const sortedFaults = useMemo(\r\n    () => [...currentFaultArr].sort((a, b) => b.id - a.id),\r\n    [currentFaultArr]\r\n  );\r\n\r\n  // Filter by search term\r\n  const filtered = useMemo(() => {\r\n    return sortedFaults.filter((f) => {\r\n      if (!f) return false;\r\n      const haystack = [\r\n        f.DescFault,\r\n        f.Location,\r\n        f.LocationOfFault,\r\n        f.ReportedBy,\r\n        f.SystemID,\r\n      ]\r\n        .join(\" \")\r\n        .toLowerCase();\r\n      return haystack.includes(search.toLowerCase());\r\n    });\r\n  }, [sortedFaults, search]);\r\n\r\n  // Pagination state\r\n  const [page, setPage] = useState(1);\r\n  useEffect(() => {\r\n    setPage(1); // Reset to first page when filtered data changes\r\n  }, [filtered]);\r\n  const max = Math.ceil(filtered.length / 10);\r\n  const current = filtered.slice((page - 1) * 10, page * 10);\r\n\r\n  // Open modal in edit mode\r\n  function openEditModal(fault) {\r\n    setEdit(fault);\r\n    setModal(true);\r\n  }\r\n\r\n  // Open notes modal\r\n  function openNotesModal(fault) {\r\n    setSelectedFaultForNotes(fault);\r\n    setNotesModal(true);\r\n  }\r\n\r\n  // Debugging: Log the filtered and current faults to verify data\r\n  useEffect(() => {\r\n    console.log(\"Filtered faults:\", filtered);\r\n    console.log(\"Current faults:\", current);\r\n  }, [filtered, current]);\r\n\r\n  return (\r\n    <>\r\n      {/* [Rest of the existing JSX remains unchanged until the FaultsTable rendering] */}\r\n\r\n      <Tab\r\n        eventKey=\"faults\"\r\n        title={\r\n          <span className=\"tab-title-lg\">🚧 Faults Review Panel</span>\r\n        }\r\n      >\r\n        {view === \"faults\" && (\r\n          <>\r\n            <Row className=\"mb-3 px-3\">\r\n              <Col md={4} className=\"mb-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Search faults...\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  aria-label=\"Search faults\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mb-2 px-3\">\r\n              <strong>Total Faults:</strong> {filtered.length}\r\n            </div>\r\n            <FaultsTable\r\n              faults={current}\r\n              onEdit={update}\r\n              onMarkResolved={resolve}\r\n              isResolved={false}\r\n              page={page}\r\n              setPage={setPage}\r\n              max={max}\r\n              onOpenEditModal={openEditModal}\r\n              onOpenNotesModal={openNotesModal}\r\n            />\r\n            {/* Add a check to display all faults if pagination is the issue */}\r\n            {filtered.length > current.length && (\r\n              <div className=\"text-center mt-3\">\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  onClick={() => setPage(1)} // Reset to first page to show all\r\n                >\r\n                  Show All Faults\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </Tab>\r\n\r\n      {/* [Rest of the existing JSX remains unchanged] */}\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}