{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Janith\\\\Desktop\\\\Fault Management System\\\\Frontend\\\\src\\\\App.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport DashboardViewOnly from \"./DashboardViewOnly\";\nimport LoginPage from \"./LoginPage\";\nimport Register from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const [faults, setFaults] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n\n  // Fault handlers\n  const handleNewFault = faultData => {\n    const newFault = {\n      id: Date.now(),\n      // Using timestamp as unique ID\n      reportedAt: new Date().toLocaleString(),\n      ...faultData\n    };\n    setFaults(prev => [...prev, newFault]);\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: `New fault reported: ${faultData.description}`,\n      isRead: false\n    }]);\n  };\n  const handleUpdateFault = updatedFault => {\n    setFaults(prev => prev.map(f => f.id === updatedFault.id ? updatedFault : f));\n  };\n  const handleDeleteFault = id => {\n    setFaults(prev => prev.filter(f => f.id !== id));\n  };\n\n  // Auth handlers\n  const handleLogin = authData => {\n    var _authData$user;\n    if (!(authData !== null && authData !== void 0 && (_authData$user = authData.user) !== null && _authData$user !== void 0 && _authData$user.role)) {\n      console.error(\"Login failed: missing role in user data\");\n      return;\n    }\n\n    // Store user info from login response\n    setUserInfo(authData.user);\n    setLoggedIn(true);\n\n    // Store token in localStorage (if using token-based auth)\n    if (authData.token) {\n      localStorage.setItem('token', authData.token);\n    }\n  };\n  const handleLogout = () => {\n    setUserInfo(null);\n    setLoggedIn(false);\n    localStorage.removeItem('token');\n  };\n\n  // Protected Route wrapper\n  const RequireAuth = ({\n    children\n  }) => {\n    if (!loggedIn) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n\n  // Wrapper components for navigation\n  const LoginWrapper = () => {\n    _s();\n    const navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin,\n      onRegisterClick: () => navigate(\"/register\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  };\n  _s(LoginWrapper, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  const RegisterWrapper = () => {\n    _s2();\n    const navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(Register, {\n      onRegisterSuccess: user => {\n        handleLogin({\n          user\n        }); // Pass user object with role\n        navigate(\"/\");\n      },\n      onCancel: () => navigate(\"/login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(RegisterWrapper, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(LoginWrapper, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(RegisterWrapper, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(RequireAuth, {\n          children: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.role) === \"admin\" ? /*#__PURE__*/_jsxDEV(Dashboard, {\n            faults: faults,\n            notifications: notifications,\n            setNotifications: setNotifications,\n            userInfo: userInfo,\n            onLogout: handleLogout,\n            onNewFault: handleNewFault,\n            onUpdateFault: handleUpdateFault,\n            onDeleteFault: handleDeleteFault\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(DashboardViewOnly, {\n            faults: faults,\n            notifications: notifications,\n            setNotifications: setNotifications,\n            userInfo: userInfo,\n            onLogout: handleLogout,\n            onNewFault: handleNewFault\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s3(App, \"7kH6eRu75Umg5H/Q+63daHnZSE8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navigate","useNavigate","Dashboard","DashboardViewOnly","LoginPage","Register","jsxDEV","_jsxDEV","App","_s3","_s","$RefreshSig$","_s2","loggedIn","setLoggedIn","userInfo","setUserInfo","faults","setFaults","notifications","setNotifications","handleNewFault","faultData","newFault","id","Date","now","reportedAt","toLocaleString","prev","message","description","isRead","handleUpdateFault","updatedFault","map","f","handleDeleteFault","filter","handleLogin","authData","_authData$user","user","role","console","error","token","localStorage","setItem","handleLogout","removeItem","RequireAuth","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","LoginWrapper","navigate","onLogin","onRegisterClick","RegisterWrapper","onRegisterSuccess","onCancel","path","element","onLogout","onNewFault","onUpdateFault","onDeleteFault","_c","$RefreshReg$"],"sources":["C:/Users/Janith/Desktop/Fault Management System/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport DashboardViewOnly from \"./DashboardViewOnly\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport Register from \"./Register\";\r\n\r\nconst App = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [faults, setFaults] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  // Fault handlers\r\n  const handleNewFault = (faultData) => {\r\n    const newFault = {\r\n      id: Date.now(), // Using timestamp as unique ID\r\n      reportedAt: new Date().toLocaleString(),\r\n      ...faultData,\r\n    };\r\n    setFaults((prev) => [...prev, newFault]);\r\n    setNotifications((prev) => [\r\n      ...prev,\r\n      {\r\n        id: Date.now(),\r\n        message: `New fault reported: ${faultData.description}`,\r\n        isRead: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleUpdateFault = (updatedFault) => {\r\n    setFaults((prev) =>\r\n      prev.map((f) => (f.id === updatedFault.id ? updatedFault : f))\r\n    );\r\n  };\r\n\r\n  const handleDeleteFault = (id) => {\r\n    setFaults((prev) => prev.filter((f) => f.id !== id));\r\n  };\r\n\r\n  // Auth handlers\r\n  const handleLogin = (authData) => {\r\n    if (!authData?.user?.role) {\r\n      console.error(\"Login failed: missing role in user data\");\r\n      return;\r\n    }\r\n    \r\n    // Store user info from login response\r\n    setUserInfo(authData.user);\r\n    setLoggedIn(true);\r\n    \r\n    // Store token in localStorage (if using token-based auth)\r\n    if (authData.token) {\r\n      localStorage.setItem('token', authData.token);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUserInfo(null);\r\n    setLoggedIn(false);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // Protected Route wrapper\r\n  const RequireAuth = ({ children }) => {\r\n    if (!loggedIn) {\r\n      return <Navigate to=\"/login\" replace />;\r\n    }\r\n    return children;\r\n  };\r\n\r\n  // Wrapper components for navigation\r\n  const LoginWrapper = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n      <LoginPage\r\n        onLogin={handleLogin}\r\n        onRegisterClick={() => navigate(\"/register\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  const RegisterWrapper = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n      <Register\r\n        onRegisterSuccess={(user) => {\r\n          handleLogin({ user }); // Pass user object with role\r\n          navigate(\"/\");\r\n        }}\r\n        onCancel={() => navigate(\"/login\")}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={loggedIn ? <Navigate to=\"/\" replace /> : <LoginWrapper />}\r\n        />\r\n        <Route\r\n          path=\"/register\"\r\n          element={loggedIn ? <Navigate to=\"/\" replace /> : <RegisterWrapper />}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <RequireAuth>\r\n              {userInfo?.role === \"admin\" ? (\r\n                <Dashboard\r\n                  faults={faults}\r\n                  notifications={notifications}\r\n                  setNotifications={setNotifications}\r\n                  userInfo={userInfo}\r\n                  onLogout={handleLogout}\r\n                  onNewFault={handleNewFault}\r\n                  onUpdateFault={handleUpdateFault}\r\n                  onDeleteFault={handleDeleteFault}\r\n                />\r\n              ) : (\r\n                <DashboardViewOnly\r\n                  faults={faults}\r\n                  notifications={notifications}\r\n                  setNotifications={setNotifications}\r\n                  userInfo={userInfo}\r\n                  onLogout={handleLogout}\r\n                  onNewFault={handleNewFault}\r\n                />\r\n              )}\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}